<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pmerit AI - Tier 1 Privilege Management Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
        }

        .header h1 {
            color: #2c3e50;
            margin-bottom: 10px;
            font-size: 2.5rem;
        }

        .mission {
            color: #34495e;
            font-size: 1.1rem;
            margin-bottom: 20px;
        }

        .user-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 15px;
        }

        .auth-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        }

        .login-form {
            max-width: 400px;
            margin: 0 auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #2c3e50;
            font-weight: 600;
        }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }

        .form-group input:focus {
            outline: none;
            border-color: #667eea;
        }

        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: transform 0.2s;
            width: 100%;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .dashboard {
            display: none;
        }

        .dashboard.active {
            display: block;
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 25px;
            margin-bottom: 30px;
        }

        .card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            backdrop-filter: blur(10px);
            transition: transform 0.3s;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #27ae60;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .alert {
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            display: none;
        }

        .alert.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 2s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .privilege-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }

        .privilege-table th,
        .privilege-table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        .privilege-table th {
            background: #f8f9fa;
            font-weight: 600;
        }

        .tier-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
        }

        .tier-1 {
            background: #e3f2fd;
            color: #1565c0;
        }

        .tier-2 {
            background: #f3e5f5;
            color: #7b1fa2;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1><i class="fas fa-shield-alt"></i> Pmerit AI Platform</h1>
            <p class="mission">Tier 1 Privilege Management Dashboard - Serving Underserved Communities Globally</p>
            <div class="user-info" id="userInfo" style="display: none;">
                <div>
                    <strong>Welcome, <span id="userName"></span></strong>
                    <span class="tier-badge" id="userTier"></span>
                </div>
                <button class="btn" onclick="logout()" style="width: auto; padding: 8px 20px;">
                    <i class="fas fa-sign-out-alt"></i> Logout
                </button>
            </div>
        </div>

        <!-- Alert Messages -->
        <div id="alertSuccess" class="alert success"></div>
        <div id="alertError" class="alert error"></div>
        
        <!-- Loading Indicator -->
        <div id="loading" class="loading">
            <div class="spinner"></div>
            <p>Connecting to authentication system...</p>
        </div>

        <!-- Login Section -->
        <div id="authSection" class="auth-section">
            <h2 style="text-align: center; margin-bottom: 30px; color: #2c3e50;">
                <i class="fas fa-lock"></i> Secure Authentication
            </h2>
            <div class="login-form">
                <form id="loginForm" onsubmit="login(event)">
                    <div class="form-group">
                        <label for="email">
                            <i class="fas fa-envelope"></i> Email Address
                        </label>
                        <input type="email" id="email" name="email" required 
                               placeholder="admin@pmerit.com">
                    </div>
                    <div class="form-group">
                        <label for="password">
                            <i class="fas fa-key"></i> Password
                        </label>
                        <input type="password" id="password" name="password" required 
                               placeholder="Enter your password">
                    </div>
                    <button type="submit" class="btn" id="loginBtn">
                        <i class="fas fa-sign-in-alt"></i> Sign In
                    </button>
                </form>
                <div style="text-align: center; margin-top: 20px; color: #666;">
                    <small>Initial Admin: admin@pmerit.com / admin123</small>
                </div>
            </div>
        </div>

        <!-- Dashboard -->
        <div id="dashboard" class="dashboard">
            <div class="dashboard-grid">
                <!-- System Status -->
                <div class="card">
                    <h3>
                        <i class="fas fa-server"></i> System Status
                        <span class="status-indicator"></span>
                    </h3>
                    <div id="systemStatus">
                        <p><strong>Database:</strong> <span class="text-success">Connected</span></p>
                        <p><strong>Authentication API:</strong> <span class="text-success">Active</span></p>
                        <p><strong>Platform:</strong> <span class="text-success">Operational</span></p>
                        <p><strong>Global URLs:</strong> <span class="text-success">Accessible</span></p>
                    </div>
                </div>

                <!-- User Management -->
                <div class="card">
                    <h3><i class="fas fa-users"></i> User Management</h3>
                    <div id="userManagement">
                        <p>Total Users: <strong id="totalUsers">Loading...</strong></p>
                        <p>Active Admins: <strong id="activeAdmins">Loading...</strong></p>
                        <button class="btn" onclick="loadUsers()" style="width: auto; margin-top: 10px;">
                            <i class="fas fa-refresh"></i> Refresh Users
                        </button>
                    </div>
                </div>

                <!-- Privilege Control -->
                <div class="card">
                    <h3><i class="fas fa-user-shield"></i> Privilege Control</h3>
                    <div id="privilegeControl">
                        <p>Your Access Level: <span id="currentTierLevel" class="tier-badge">Loading...</span></p>
                        <div style="margin-top: 15px;">
                            <label><input type="checkbox" id="tier2Access" disabled> Tier 2 Access</label><br>
                            <label><input type="checkbox" id="devbotAccess" disabled> DevBot Access</label><br>
                            <label><input type="checkbox" id="dockerAccess" disabled> Docker Access</label>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="card">
                    <h3><i class="fas fa-bolt"></i> Quick Actions</h3>
                    <div id="quickActions">
                        <button class="btn" onclick="accessTier2()" style="width: 100%; margin-bottom: 10px;">
                            <i class="fas fa-door-open"></i> Access Tier 2 Admin Portal
                        </button>
                        <button class="btn" onclick="openPgAdmin()" style="width: 100%; margin-bottom: 10px;">
                            <i class="fas fa-database"></i> Database Management (pgAdmin)
                        </button>
                        <button class="btn" onclick="viewLogs()" style="width: 100%;">
                            <i class="fas fa-file-alt"></i> View Activity Logs
                        </button>
                    </div>
                </div>
            </div>

            <!-- Users Table -->
            <div class="card">
                <h3><i class="fas fa-table"></i> Platform Users</h3>
                <div id="usersTableContainer">
                    <table class="privilege-table">
                        <thead>
                            <tr>
                                <th>Email</th>
                                <th>Username</th>
                                <th>Status</th>
                                <th>Roles</th>
                                <th>Created</th>
                            </tr>
                        </thead>
                        <tbody id="usersTableBody">
                            <tr>
                                <td colspan="5" style="text-align: center;">Loading users...</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Configuration
        const API_BASE_URL = 'http://localhost:8001';
        let currentUser = null;
        let authToken = null;

        // Show/hide elements
        function showElement(id) {
            document.getElementById(id).style.display = 'block';
        }

        function hideElement(id) {
            document.getElementById(id).style.display = 'none';
        }

        function showAlert(type, message) {
            const alertElement = document.getElementById(`alert${type.charAt(0).toUpperCase() + type.slice(1)}`);
            alertElement.textContent = message;
            alertElement.style.display = 'block';
            setTimeout(() => {
                alertElement.style.display = 'none';
            }, 5000);
        }

        // Authentication functions
        async function login(event) {
            event.preventDefault();
            
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const loginBtn = document.getElementById('loginBtn');
            
            loginBtn.disabled = true;
            loginBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Signing In...';
            
            try {
                const response = await fetch(`${API_BASE_URL}/auth/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email, password }),
                });
                
                if (!response.ok) {
                    const error = await response.json();
                    throw new Error(error.detail || 'Login failed');
                }
                
                const data = await response.json();
                authToken = data.access_token;
                currentUser = data.user_info;
                
                // Store token
                localStorage.setItem('authToken', authToken);
                localStorage.setItem('currentUser', JSON.stringify(currentUser));
                
                showAlert('success', 'Login successful! Welcome to Pmerit AI Platform.');
                showDashboard();
                
            } catch (error) {
                showAlert('error', error.message);
            } finally {
                loginBtn.disabled = false;
                loginBtn.innerHTML = '<i class="fas fa-sign-in-alt"></i> Sign In';
            }
        }

        async function logout() {
            try {
                if (authToken) {
                    await fetch(`${API_BASE_URL}/auth/logout`, {
                        method: 'POST',
                        headers: {
                            'Authorization': `Bearer ${authToken}`,
                        },
                    });
                }
            } catch (error) {
                console.error('Logout error:', error);
            }
            
            // Clear local storage
            localStorage.removeItem('authToken');
            localStorage.removeItem('currentUser');
            
            // Reset UI
            authToken = null;
            currentUser = null;
            document.getElementById('dashboard').classList.remove('active');
            document.getElementById('authSection').style.display = 'block';
            document.getElementById('userInfo').style.display = 'none';
            
            showAlert('success', 'Successfully logged out.');
        }

        function showDashboard() {
            // Hide auth section
            document.getElementById('authSection').style.display = 'none';
            
            // Show dashboard
            document.getElementById('dashboard').classList.add('active');
            
            // Show user info
            document.getElementById('userInfo').style.display = 'flex';
            document.getElementById('userName').textContent = currentUser.email;
            
            // Update tier badge
            const tierBadge = document.getElementById('userTier');
            const privileges = currentUser.admin_privileges;
            if (privileges.has_tier2_access) {
                tierBadge.textContent = 'Tier 2 Admin';
                tierBadge.className = 'tier-badge tier-2';
            } else if (privileges.has_tier1_access) {
                tierBadge.textContent = 'Tier 1 Admin';
                tierBadge.className = 'tier-badge tier-1';
            }
            
            // Update privilege checkboxes
            document.getElementById('tier2Access').checked = privileges.has_tier2_access;
            document.getElementById('devbotAccess').checked = privileges.permissions.devbot_access || false;
            document.getElementById('dockerAccess').checked = privileges.permissions.docker_access || false;
            
            // Update current tier level
            const currentTierLevel = document.getElementById('currentTierLevel');
            currentTierLevel.textContent = `Tier ${privileges.tier_level}`;
            currentTierLevel.className = `tier-badge tier-${privileges.tier_level}`;
            
            // Load dashboard data
            loadUsers();
        }

        // Dashboard functions
        async function loadUsers() {
            try {
                const response = await fetch(`${API_BASE_URL}/admin/users`, {
                    headers: {
                        'Authorization': `Bearer ${authToken}`,
                    },
                });
                
                if (!response.ok) {
                    throw new Error('Failed to load users');
                }
                
                const users = await response.json();
                updateUsersTable(users);
                
                // Update user counts
                document.getElementById('totalUsers').textContent = users.length;
                const activeAdmins = users.filter(user => user.roles && user.roles.length > 0).length;
                document.getElementById('activeAdmins').textContent = activeAdmins;
                
            } catch (error) {
                showAlert('error', `Failed to load users: ${error.message}`);
            }
        }

        function updateUsersTable(users) {
            const tbody = document.getElementById('usersTableBody');
            tbody.innerHTML = '';
            
            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.email}</td>
                    <td>${user.username}</td>
                    <td>${user.is_active ? '<span style="color: #27ae60;">Active</span>' : '<span style="color: #e74c3c;">Inactive</span>'}</td>
                    <td>${user.roles ? user.roles.join(', ') : 'No roles'}</td>
                    <td>${user.created_at ? new Date(user.created_at).toLocaleDateString() : 'N/A'}</td>
                `;
                tbody.appendChild(row);
            });
        }

        // Quick action functions
        function accessTier2() {
            if (currentUser && currentUser.admin_privileges.has_tier2_access) {
                // Open Tier 2 admin portal (to be implemented)
                showAlert('success', 'Tier 2 access granted! Full admin portal coming soon...');
            } else {
                showAlert('error', 'Tier 2 access required. Contact a super admin for privileges.');
            }
        }

        function openPgAdmin() {
            window.open('http://localhost:18080', '_blank');
        }

        async function viewLogs() {
            try {
                const response = await fetch(`${API_BASE_URL}/admin/activity`, {
                    headers: {
                        'Authorization': `Bearer ${authToken}`,
                    },
                });
                
                if (!response.ok) {
                    throw new Error('Failed to load activity logs');
                }
                
                const logs = await response.json();
                console.log('Activity Logs:', logs);
                showAlert('success', `Loaded ${logs.length} activity log entries. Check browser console.`);
                
            } catch (error) {
                showAlert('error', `Failed to load logs: ${error.message}`);
            }
        }

        // Initialize app
        document.addEventListener('DOMContentLoaded', function() {
            // Check for existing session
            const storedToken = localStorage.getItem('authToken');
            const storedUser = localStorage.getItem('currentUser');
            
            if (storedToken && storedUser) {
                authToken = storedToken;
                currentUser = JSON.parse(storedUser);
                showDashboard();
            }
        });

        // Test API connection on load
        fetch(`${API_BASE_URL}/health`)
            .then(response => response.json())
            .then(data => {
                console.log('API Health Check:', data);
            })
            .catch(error => {
                console.error('API connection failed:', error);
                showAlert('error', 'Authentication API unavailable. Please start the API server.');
            });
    </script>
</body>
</html>
